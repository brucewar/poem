{
  "name": "oss-client",
  "version": "0.4.0",
  "description": "aliyun oss client for node.js",
  "main": "index.js",
  "scripts": {
    "test": "make test-all"
  },
  "config": {
    "blanket": {
      "pattern": "oss-client/lib/oss.js"
    },
    "travis-cov": {
      "threshold": 90
    }
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/coderhaoxin/oss-client.git"
  },
  "keywords": [
    "aliyun",
    "oss",
    "client"
  ],
  "author": {
    "name": "haoxin"
  },
  "license": "MIT",
  "dependencies": {
    "mime": "~1.2.11",
    "xml2js": "~0.4.1"
  },
  "directories": {
    "test": "test"
  },
  "devDependencies": {
    "blanket": "*",
    "should": "*",
    "mocha": "*",
    "travis-cov": "*",
    "coveralls": "*",
    "mocha-lcov-reporter": "*",
    "node-uuid": "*"
  },
  "bugs": {
    "url": "https://github.com/coderhaoxin/oss-client/issues"
  },
  "homepage": "https://github.com/coderhaoxin/oss-client",
  "readme": "[![NPM](https://nodei.co/npm/oss-client.png?downloads=true)](https://nodei.co/npm/oss-client/)\n\n### a node.js module to connect aliyun oss\n```bash\nnpm install oss-client\n```\n\n[aliyun oss document](http://imgs-storage.cdn.aliyuncs.com/help/oss/OSS_API_20131015.pdf?spm=5176.383663.5.23.OEtIjV&file=OSS_API_20131015.pdf)\n\n### how to use\n```js\nvar OSS = require('oss-client');\nvar option = {\n  accessKeyId: 'your access key id',\n  accessKeySecret: 'your access key secret'\n};\n\n/*\n * host - default: oss.aliyuncs.com\n * port - default: 8080\n * timeout - default: 30000000\n * agent - default: agent.maxSockets = 20\n */\n\nvar oss = new OSS.OssClient(option);\n```\n\n参数说明：\n```js\n{\n  bucket: 'bucket name',\n  object: 'object name',\n  acl: 'bucket 访问规则'\n}\n```\n\n### object\n\n创建object(by: file path)\n```js\n/*\n * srcFile: 上传的文件路径\n * userMetas: 可选，object类型，用户自定义header，如: x-oss-meta-location\n */\nputObject({\n  bucket: bucket,\n  object: object,\n  srcFile: srcFile,\n  userMetas: userMetas //optional\n}, function (err) {});\n```\n\n创建object(by: buffer)\n```js\n/*\n * userMetas: 可选，object类型，用户自定义header，如: x-oss-meta-location\n * contentType: 可选，但推荐添加(buffer无法自动获取contentType)\n */\n\noss.putObject({\n  bucket: bucket,\n  object: object,\n  srcFile: new Buffer(\"hello,wolrd\", \"utf8\"),\n  contentType: 'image/jpeg'\n}, function (error, result) {});\n```\n\n创建object(by: stream)\n```js\n/*\n * userMetas: 可选，object类型，用户自定义header，如: x-oss-meta-location\n */\nvar input = fs.createReadStream(__filename);\noss.putObject({\n  bucket: bucket,\n  object: object,\n  srcFile: input,\n  contentLength: fs.statSync(__filename).size\n}, function (error, result) {});\n```\n\n复制object\n```js\ncopyObject({\n  bucket: bucket,\n  object: object,\n  srcObject: srcObject\n}, function (err) {});\n```\n\n删除object\n```js\ndeleteObject({\n  bucket: bucket,\n  object: object\n}, function (err) {});\n```\n\n获取object\n```js\n/*\n * dstFile: 保存object的文件路径\n * userHeaders: 可选，object类型，用户自定义header，如 If-Unmodified-Since\n */\ngetObject({\n  bucket: bucket,\n  object: object,\n  dstFile: dstFile,\n  userHeaders: userHeaders\n}, function (err) {});\n```\n\n获取object头信息\n```js\nheadObject({\n  bucket: bucket,\n  object: object\n}, function (err, result) {});\n```\n\n获取object列表\n```js\n/*\n * prefix: 可选，object 前缀\n * marker: 可选，列表起始object\n * delimiter: 可选，object分组字符，若为 '/' 则不列出路径深度大于等于二层的object\n * maxKeys: 可选， 列出的object最大个数\n */\nlistObject({\n  bucket: bucket,\n  prefix: prefix,\n  marker: marker,\n  delimiter: delimiter,\n  maxKeys: maxKeys\n}, function (err, result) {});\n```\n\n### bucket\n\n列出所有bucket\n```js\nlistBucket(function (err) {});\n```\n\n创建bucket\n```js\ncreateBucket({\n  bucket: bucket,\n  acl: acl\n}, function (err) {});\n```\n\n删除bucket\n```js\ndeleteBucket(bucket, function (err) {});\n```\n\n获取bucket访问规则\n```js\ngetBucketAcl(bucket, function (err, result) {});\n```\n\n设置bucket访问规则\n```js\nsetBucketAcl({\n  bucket: bucket,\n  acl: acl\n}, function (err) {});\n```\n\n### License\nMIT\n",
  "readmeFilename": "README.md",
  "_id": "oss-client@0.4.0",
  "_from": "oss-client@"
}
